// Code generated by protoc-gen-go. DO NOT EDIT.
// source: apis.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PlayerState struct {
	ButtonPosition       int32    `protobuf:"varint,1,opt,name=buttonPosition,proto3" json:"buttonPosition,omitempty"`
	BettingRound         int32    `protobuf:"varint,2,opt,name=bettingRound,proto3" json:"bettingRound,omitempty"`
	LeadPlayer           int32    `protobuf:"varint,3,opt,name=leadPlayer,proto3" json:"leadPlayer,omitempty"`
	ActingPlayer         int32    `protobuf:"varint,4,opt,name=actingPlayer,proto3" json:"actingPlayer,omitempty"`
	Pots                 []int32  `protobuf:"varint,5,rep,packed,name=pots,proto3" json:"pots,omitempty"`
	PlayerCards          []int32  `protobuf:"varint,6,rep,packed,name=playerCards,proto3" json:"playerCards,omitempty"`
	CommunityCards       []int32  `protobuf:"varint,7,rep,packed,name=communityCards,proto3" json:"communityCards,omitempty"`
	Seats                []*Seat  `protobuf:"bytes,8,rep,name=seats,proto3" json:"seats,omitempty"`
	IsHandActive         bool     `protobuf:"varint,9,opt,name=isHandActive,proto3" json:"isHandActive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerState) Reset()         { *m = PlayerState{} }
func (m *PlayerState) String() string { return proto.CompactTextString(m) }
func (*PlayerState) ProtoMessage()    {}
func (*PlayerState) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{0}
}

func (m *PlayerState) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerState.Unmarshal(m, b)
}
func (m *PlayerState) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerState.Marshal(b, m, deterministic)
}
func (m *PlayerState) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerState.Merge(m, src)
}
func (m *PlayerState) XXX_Size() int {
	return xxx_messageInfo_PlayerState.Size(m)
}
func (m *PlayerState) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerState.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerState proto.InternalMessageInfo

func (m *PlayerState) GetButtonPosition() int32 {
	if m != nil {
		return m.ButtonPosition
	}
	return 0
}

func (m *PlayerState) GetBettingRound() int32 {
	if m != nil {
		return m.BettingRound
	}
	return 0
}

func (m *PlayerState) GetLeadPlayer() int32 {
	if m != nil {
		return m.LeadPlayer
	}
	return 0
}

func (m *PlayerState) GetActingPlayer() int32 {
	if m != nil {
		return m.ActingPlayer
	}
	return 0
}

func (m *PlayerState) GetPots() []int32 {
	if m != nil {
		return m.Pots
	}
	return nil
}

func (m *PlayerState) GetPlayerCards() []int32 {
	if m != nil {
		return m.PlayerCards
	}
	return nil
}

func (m *PlayerState) GetCommunityCards() []int32 {
	if m != nil {
		return m.CommunityCards
	}
	return nil
}

func (m *PlayerState) GetSeats() []*Seat {
	if m != nil {
		return m.Seats
	}
	return nil
}

func (m *PlayerState) GetIsHandActive() bool {
	if m != nil {
		return m.IsHandActive
	}
	return false
}

type Seat struct {
	Index                int32    `protobuf:"varint,1,opt,name=index,proto3" json:"index,omitempty"`
	Occupied             bool     `protobuf:"varint,2,opt,name=occupied,proto3" json:"occupied,omitempty"`
	Player               *Player  `protobuf:"bytes,3,opt,name=player,proto3" json:"player,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Seat) Reset()         { *m = Seat{} }
func (m *Seat) String() string { return proto.CompactTextString(m) }
func (*Seat) ProtoMessage()    {}
func (*Seat) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{1}
}

func (m *Seat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Seat.Unmarshal(m, b)
}
func (m *Seat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Seat.Marshal(b, m, deterministic)
}
func (m *Seat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Seat.Merge(m, src)
}
func (m *Seat) XXX_Size() int {
	return xxx_messageInfo_Seat.Size(m)
}
func (m *Seat) XXX_DiscardUnknown() {
	xxx_messageInfo_Seat.DiscardUnknown(m)
}

var xxx_messageInfo_Seat proto.InternalMessageInfo

func (m *Seat) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Seat) GetOccupied() bool {
	if m != nil {
		return m.Occupied
	}
	return false
}

func (m *Seat) GetPlayer() *Player {
	if m != nil {
		return m.Player
	}
	return nil
}

type Player struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Stack                int32    `protobuf:"varint,2,opt,name=stack,proto3" json:"stack,omitempty"`
	SeatNumber           int32    `protobuf:"varint,3,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	Folded               bool     `protobuf:"varint,4,opt,name=folded,proto3" json:"folded,omitempty"`
	IsAllIn              bool     `protobuf:"varint,5,opt,name=isAllIn,proto3" json:"isAllIn,omitempty"`
	SittingOut           bool     `protobuf:"varint,6,opt,name=sittingOut,proto3" json:"sittingOut,omitempty"`
	LastAction           *Action  `protobuf:"bytes,7,opt,name=lastAction,proto3" json:"lastAction,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{2}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetStack() int32 {
	if m != nil {
		return m.Stack
	}
	return 0
}

func (m *Player) GetSeatNumber() int32 {
	if m != nil {
		return m.SeatNumber
	}
	return 0
}

func (m *Player) GetFolded() bool {
	if m != nil {
		return m.Folded
	}
	return false
}

func (m *Player) GetIsAllIn() bool {
	if m != nil {
		return m.IsAllIn
	}
	return false
}

func (m *Player) GetSittingOut() bool {
	if m != nil {
		return m.SittingOut
	}
	return false
}

func (m *Player) GetLastAction() *Action {
	if m != nil {
		return m.LastAction
	}
	return nil
}

type Action struct {
	ActionType           int32    `protobuf:"varint,1,opt,name=actionType,proto3" json:"actionType,omitempty"`
	Value                int32    `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{3}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetActionType() int32 {
	if m != nil {
		return m.ActionType
	}
	return 0
}

func (m *Action) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type GetPlayerStateRequest struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	GameId               int32    `protobuf:"varint,2,opt,name=gameId,proto3" json:"gameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPlayerStateRequest) Reset()         { *m = GetPlayerStateRequest{} }
func (m *GetPlayerStateRequest) String() string { return proto.CompactTextString(m) }
func (*GetPlayerStateRequest) ProtoMessage()    {}
func (*GetPlayerStateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{4}
}

func (m *GetPlayerStateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPlayerStateRequest.Unmarshal(m, b)
}
func (m *GetPlayerStateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPlayerStateRequest.Marshal(b, m, deterministic)
}
func (m *GetPlayerStateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPlayerStateRequest.Merge(m, src)
}
func (m *GetPlayerStateRequest) XXX_Size() int {
	return xxx_messageInfo_GetPlayerStateRequest.Size(m)
}
func (m *GetPlayerStateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPlayerStateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPlayerStateRequest proto.InternalMessageInfo

func (m *GetPlayerStateRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *GetPlayerStateRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type StartGameRequest struct {
	GameId               int32    `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	BigBlind             int32    `protobuf:"varint,2,opt,name=bigBlind,proto3" json:"bigBlind,omitempty"`
	SmallBlind           int32    `protobuf:"varint,3,opt,name=smallBlind,proto3" json:"smallBlind,omitempty"`
	Deterministic        bool     `protobuf:"varint,4,opt,name=deterministic,proto3" json:"deterministic,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartGameRequest) Reset()         { *m = StartGameRequest{} }
func (m *StartGameRequest) String() string { return proto.CompactTextString(m) }
func (*StartGameRequest) ProtoMessage()    {}
func (*StartGameRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{5}
}

func (m *StartGameRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartGameRequest.Unmarshal(m, b)
}
func (m *StartGameRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartGameRequest.Marshal(b, m, deterministic)
}
func (m *StartGameRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartGameRequest.Merge(m, src)
}
func (m *StartGameRequest) XXX_Size() int {
	return xxx_messageInfo_StartGameRequest.Size(m)
}
func (m *StartGameRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartGameRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartGameRequest proto.InternalMessageInfo

func (m *StartGameRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func (m *StartGameRequest) GetBigBlind() int32 {
	if m != nil {
		return m.BigBlind
	}
	return 0
}

func (m *StartGameRequest) GetSmallBlind() int32 {
	if m != nil {
		return m.SmallBlind
	}
	return 0
}

func (m *StartGameRequest) GetDeterministic() bool {
	if m != nil {
		return m.Deterministic
	}
	return false
}

type AddPlayerRequest struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Stack                int32    `protobuf:"varint,3,opt,name=stack,proto3" json:"stack,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPlayerRequest) Reset()         { *m = AddPlayerRequest{} }
func (m *AddPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*AddPlayerRequest) ProtoMessage()    {}
func (*AddPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{6}
}

func (m *AddPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPlayerRequest.Unmarshal(m, b)
}
func (m *AddPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPlayerRequest.Marshal(b, m, deterministic)
}
func (m *AddPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPlayerRequest.Merge(m, src)
}
func (m *AddPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_AddPlayerRequest.Size(m)
}
func (m *AddPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddPlayerRequest proto.InternalMessageInfo

func (m *AddPlayerRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *AddPlayerRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddPlayerRequest) GetStack() int32 {
	if m != nil {
		return m.Stack
	}
	return 0
}

type SitPlayerRequest struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SeatNumber           int32    `protobuf:"varint,2,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	GameId               int32    `protobuf:"varint,3,opt,name=gameId,proto3" json:"gameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SitPlayerRequest) Reset()         { *m = SitPlayerRequest{} }
func (m *SitPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*SitPlayerRequest) ProtoMessage()    {}
func (*SitPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{7}
}

func (m *SitPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SitPlayerRequest.Unmarshal(m, b)
}
func (m *SitPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SitPlayerRequest.Marshal(b, m, deterministic)
}
func (m *SitPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SitPlayerRequest.Merge(m, src)
}
func (m *SitPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_SitPlayerRequest.Size(m)
}
func (m *SitPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SitPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SitPlayerRequest proto.InternalMessageInfo

func (m *SitPlayerRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *SitPlayerRequest) GetSeatNumber() int32 {
	if m != nil {
		return m.SeatNumber
	}
	return 0
}

func (m *SitPlayerRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type StandPlayerRequest struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	SeatNumber           int32    `protobuf:"varint,2,opt,name=seatNumber,proto3" json:"seatNumber,omitempty"`
	GameId               int32    `protobuf:"varint,3,opt,name=gameId,proto3" json:"gameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StandPlayerRequest) Reset()         { *m = StandPlayerRequest{} }
func (m *StandPlayerRequest) String() string { return proto.CompactTextString(m) }
func (*StandPlayerRequest) ProtoMessage()    {}
func (*StandPlayerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{8}
}

func (m *StandPlayerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StandPlayerRequest.Unmarshal(m, b)
}
func (m *StandPlayerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StandPlayerRequest.Marshal(b, m, deterministic)
}
func (m *StandPlayerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StandPlayerRequest.Merge(m, src)
}
func (m *StandPlayerRequest) XXX_Size() int {
	return xxx_messageInfo_StandPlayerRequest.Size(m)
}
func (m *StandPlayerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StandPlayerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StandPlayerRequest proto.InternalMessageInfo

func (m *StandPlayerRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *StandPlayerRequest) GetSeatNumber() int32 {
	if m != nil {
		return m.SeatNumber
	}
	return 0
}

func (m *StandPlayerRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type TakeActionRequest struct {
	PlayerId             int32    `protobuf:"varint,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	Action               *Action  `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	GameId               int32    `protobuf:"varint,3,opt,name=gameId,proto3" json:"gameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeActionRequest) Reset()         { *m = TakeActionRequest{} }
func (m *TakeActionRequest) String() string { return proto.CompactTextString(m) }
func (*TakeActionRequest) ProtoMessage()    {}
func (*TakeActionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{9}
}

func (m *TakeActionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeActionRequest.Unmarshal(m, b)
}
func (m *TakeActionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeActionRequest.Marshal(b, m, deterministic)
}
func (m *TakeActionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeActionRequest.Merge(m, src)
}
func (m *TakeActionRequest) XXX_Size() int {
	return xxx_messageInfo_TakeActionRequest.Size(m)
}
func (m *TakeActionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeActionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TakeActionRequest proto.InternalMessageInfo

func (m *TakeActionRequest) GetPlayerId() int32 {
	if m != nil {
		return m.PlayerId
	}
	return 0
}

func (m *TakeActionRequest) GetAction() *Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (m *TakeActionRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

type OperationResponse struct {
	Successful           bool     `protobuf:"varint,1,opt,name=successful,proto3" json:"successful,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OperationResponse) Reset()         { *m = OperationResponse{} }
func (m *OperationResponse) String() string { return proto.CompactTextString(m) }
func (*OperationResponse) ProtoMessage()    {}
func (*OperationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{10}
}

func (m *OperationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OperationResponse.Unmarshal(m, b)
}
func (m *OperationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OperationResponse.Marshal(b, m, deterministic)
}
func (m *OperationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OperationResponse.Merge(m, src)
}
func (m *OperationResponse) XXX_Size() int {
	return xxx_messageInfo_OperationResponse.Size(m)
}
func (m *OperationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OperationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OperationResponse proto.InternalMessageInfo

func (m *OperationResponse) GetSuccessful() bool {
	if m != nil {
		return m.Successful
	}
	return false
}

func (m *OperationResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type DealHandRequest struct {
	GameId               int32    `protobuf:"varint,1,opt,name=gameId,proto3" json:"gameId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DealHandRequest) Reset()         { *m = DealHandRequest{} }
func (m *DealHandRequest) String() string { return proto.CompactTextString(m) }
func (*DealHandRequest) ProtoMessage()    {}
func (*DealHandRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_b480fce41873d8e6, []int{11}
}

func (m *DealHandRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DealHandRequest.Unmarshal(m, b)
}
func (m *DealHandRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DealHandRequest.Marshal(b, m, deterministic)
}
func (m *DealHandRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DealHandRequest.Merge(m, src)
}
func (m *DealHandRequest) XXX_Size() int {
	return xxx_messageInfo_DealHandRequest.Size(m)
}
func (m *DealHandRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DealHandRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DealHandRequest proto.InternalMessageInfo

func (m *DealHandRequest) GetGameId() int32 {
	if m != nil {
		return m.GameId
	}
	return 0
}

func init() {
	proto.RegisterType((*PlayerState)(nil), "v1.PlayerState")
	proto.RegisterType((*Seat)(nil), "v1.Seat")
	proto.RegisterType((*Player)(nil), "v1.Player")
	proto.RegisterType((*Action)(nil), "v1.Action")
	proto.RegisterType((*GetPlayerStateRequest)(nil), "v1.GetPlayerStateRequest")
	proto.RegisterType((*StartGameRequest)(nil), "v1.StartGameRequest")
	proto.RegisterType((*AddPlayerRequest)(nil), "v1.AddPlayerRequest")
	proto.RegisterType((*SitPlayerRequest)(nil), "v1.SitPlayerRequest")
	proto.RegisterType((*StandPlayerRequest)(nil), "v1.StandPlayerRequest")
	proto.RegisterType((*TakeActionRequest)(nil), "v1.TakeActionRequest")
	proto.RegisterType((*OperationResponse)(nil), "v1.OperationResponse")
	proto.RegisterType((*DealHandRequest)(nil), "v1.DealHandRequest")
}

func init() { proto.RegisterFile("apis.proto", fileDescriptor_b480fce41873d8e6) }

var fileDescriptor_b480fce41873d8e6 = []byte{
	// 718 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x55, 0xcb, 0x6e, 0xd3, 0x4a,
	0x18, 0x6e, 0x92, 0xc6, 0x4d, 0xff, 0xf4, 0xf4, 0x32, 0xa7, 0xad, 0x7c, 0xba, 0xa8, 0xa2, 0xd1,
	0x11, 0x0a, 0x2c, 0x2a, 0xb5, 0x6c, 0x10, 0x42, 0x95, 0x0a, 0x48, 0xa5, 0x42, 0xd0, 0xca, 0xe9,
	0x82, 0x05, 0x9b, 0x89, 0xfd, 0x37, 0x8c, 0x62, 0x8f, 0x8d, 0x67, 0x1c, 0xd1, 0x77, 0xe0, 0x89,
	0xd8, 0xf0, 0x0a, 0x3c, 0x12, 0x9a, 0x8b, 0x2f, 0x49, 0x2f, 0x64, 0xc3, 0x6e, 0xfe, 0xef, 0xbf,
	0x7f, 0xf3, 0x79, 0x0c, 0xc0, 0x32, 0x2e, 0x8f, 0xb2, 0x3c, 0x55, 0x29, 0x69, 0xcf, 0x8e, 0xe9,
	0xcf, 0x36, 0xf4, 0xaf, 0x62, 0x76, 0x8b, 0xf9, 0x48, 0x31, 0x85, 0xe4, 0x09, 0x6c, 0x8e, 0x0b,
	0xa5, 0x52, 0x71, 0x95, 0x4a, 0xae, 0x78, 0x2a, 0xfc, 0xd6, 0xa0, 0x35, 0xec, 0x06, 0x0b, 0x28,
	0xa1, 0xb0, 0x31, 0x46, 0xa5, 0xb8, 0x98, 0x04, 0x69, 0x21, 0x22, 0xbf, 0x6d, 0xa2, 0xe6, 0x30,
	0x72, 0x08, 0x10, 0x23, 0x8b, 0x6c, 0x79, 0xbf, 0x63, 0x22, 0x1a, 0x88, 0xae, 0xc1, 0x42, 0x1d,
	0xee, 0x22, 0x56, 0x6d, 0x8d, 0x26, 0x46, 0x08, 0xac, 0x66, 0xa9, 0x92, 0x7e, 0x77, 0xd0, 0x19,
	0x76, 0x03, 0x73, 0x26, 0x03, 0xe8, 0x67, 0xc6, 0xfb, 0x86, 0xe5, 0x91, 0xf4, 0x3d, 0xe3, 0x6a,
	0x42, 0x7a, 0x8b, 0x30, 0x4d, 0x92, 0x42, 0x70, 0x75, 0x6b, 0x83, 0xd6, 0x4c, 0xd0, 0x02, 0x4a,
	0x0e, 0xa1, 0x2b, 0x91, 0x29, 0xe9, 0xf7, 0x06, 0x9d, 0x61, 0xff, 0xa4, 0x77, 0x34, 0x3b, 0x3e,
	0x1a, 0x21, 0x53, 0x81, 0x85, 0xf5, 0x84, 0x5c, 0xbe, 0x63, 0x22, 0x3a, 0x0b, 0x15, 0x9f, 0xa1,
	0xbf, 0x3e, 0x68, 0x0d, 0x7b, 0xc1, 0x1c, 0x46, 0x3f, 0xc3, 0xaa, 0x4e, 0x21, 0xbb, 0xd0, 0xe5,
	0x22, 0xc2, 0x6f, 0x8e, 0x30, 0x6b, 0x90, 0x03, 0xe8, 0xa5, 0x61, 0x58, 0x64, 0x1c, 0x2d, 0x47,
	0xbd, 0xa0, 0xb2, 0x09, 0x05, 0x2f, 0xab, 0xb9, 0xe9, 0x9f, 0x80, 0x6e, 0x6f, 0xf7, 0x0e, 0x9c,
	0x87, 0xfe, 0x6a, 0x81, 0x57, 0x53, 0x21, 0x58, 0x82, 0xa6, 0xfe, 0x7a, 0x60, 0xce, 0xba, 0xa9,
	0x54, 0x2c, 0x9c, 0x3a, 0xfe, 0xad, 0xa1, 0x89, 0xd7, 0xf3, 0x7f, 0x2c, 0x92, 0x71, 0x4d, 0x7c,
	0x8d, 0x90, 0x7d, 0xf0, 0x6e, 0xd2, 0x38, 0xc2, 0xc8, 0x50, 0xde, 0x0b, 0x9c, 0x45, 0x7c, 0x58,
	0xe3, 0xf2, 0x2c, 0x8e, 0x2f, 0x84, 0xdf, 0x35, 0x8e, 0xd2, 0x34, 0x15, 0xb9, 0xb9, 0xda, 0xcb,
	0x42, 0xf9, 0x9e, 0x71, 0x36, 0x10, 0xf2, 0x0c, 0x20, 0x66, 0x52, 0x69, 0x4a, 0x52, 0xe1, 0xaf,
	0xd5, 0xeb, 0x58, 0x24, 0x68, 0x78, 0xe9, 0x29, 0x78, 0xf6, 0xa4, 0xab, 0x32, 0x73, 0xba, 0xbe,
	0xcd, 0xd0, 0xf1, 0xd6, 0x40, 0xf4, 0x76, 0x33, 0x16, 0x17, 0x58, 0x6e, 0x67, 0x0c, 0xfa, 0x1e,
	0xf6, 0xce, 0x51, 0x35, 0x44, 0x1b, 0xe0, 0xd7, 0x02, 0xa5, 0xd2, 0x5c, 0x5b, 0xd6, 0x2e, 0x22,
	0x57, 0xac, 0xb2, 0xf5, 0xca, 0x13, 0x96, 0xe0, 0x45, 0xa9, 0x54, 0x67, 0xd1, 0xef, 0x2d, 0xd8,
	0x1e, 0x29, 0x96, 0xab, 0x73, 0x96, 0x54, 0x85, 0xea, 0xe0, 0x56, 0x33, 0x58, 0x37, 0x18, 0xf3,
	0xc9, 0xeb, 0x98, 0x57, 0x82, 0xaf, 0x6c, 0xc3, 0x50, 0xc2, 0xe2, 0xd8, 0x7a, 0x4b, 0xce, 0x2b,
	0x84, 0xfc, 0x0f, 0xff, 0x44, 0xa8, 0x30, 0x4f, 0xb8, 0xe0, 0x52, 0xf1, 0xd0, 0x51, 0x3f, 0x0f,
	0xd2, 0x4f, 0xb0, 0x7d, 0x16, 0xb9, 0xef, 0x63, 0x99, 0xb5, 0x4a, 0x4d, 0xb4, 0xef, 0xd3, 0x44,
	0xa7, 0xa1, 0x09, 0x7a, 0x03, 0xdb, 0x23, 0xae, 0x96, 0xaf, 0x3c, 0xaf, 0xa1, 0xf6, 0x7d, 0x1a,
	0x72, 0x1c, 0x75, 0xe6, 0x08, 0xfd, 0x02, 0x64, 0xa4, 0x98, 0x88, 0xfe, 0x7e, 0xa7, 0x29, 0xec,
	0x5c, 0xb3, 0x29, 0x3a, 0x85, 0x2d, 0xd1, 0x88, 0x82, 0x67, 0xc5, 0x65, 0x9a, 0xcc, 0x0b, 0xd4,
	0x79, 0x1e, 0x6c, 0xf6, 0x01, 0x76, 0x2e, 0x33, 0xcc, 0x99, 0xed, 0x25, 0xb3, 0x54, 0x48, 0x34,
	0x93, 0x17, 0x61, 0x88, 0x52, 0xde, 0x14, 0xb1, 0x69, 0xa7, 0xbf, 0x8a, 0x0a, 0xd1, 0xdf, 0x53,
	0x82, 0x52, 0xb2, 0x49, 0x79, 0x41, 0xa5, 0x49, 0x9f, 0xc2, 0xd6, 0x5b, 0x64, 0xb1, 0x7e, 0x46,
	0xfe, 0x20, 0xba, 0x93, 0x1f, 0x1d, 0xd8, 0xb8, 0x4a, 0xa7, 0x98, 0x8f, 0x30, 0x9f, 0xf1, 0x10,
	0xc9, 0x4b, 0x58, 0xaf, 0x14, 0x4b, 0x76, 0xcd, 0x93, 0xb5, 0x20, 0xe0, 0x83, 0x3d, 0x8d, 0xde,
	0x99, 0x97, 0xae, 0xe8, 0xdc, 0x4a, 0x5f, 0x36, 0x77, 0x51, 0x6e, 0x8f, 0xe6, 0x56, 0x0a, 0x72,
	0x7d, 0x17, 0x04, 0xf5, 0x70, 0xee, 0x29, 0xf4, 0x1b, 0xaa, 0x20, 0xfb, 0x6e, 0x6a, 0xb1, 0x6c,
	0xef, 0x57, 0x00, 0xf5, 0x5d, 0x13, 0x13, 0x76, 0xe7, 0xee, 0x1f, 0xce, 0x7e, 0x01, 0xbd, 0x92,
	0x6d, 0xf2, 0xaf, 0x0e, 0x5a, 0xe0, 0xfe, 0xb1, 0xb9, 0x37, 0xe7, 0xdf, 0x1a, 0xf2, 0x9f, 0x0e,
	0xbd, 0xf7, 0xfd, 0x39, 0xd8, 0xaa, 0xdf, 0x6f, 0x83, 0xd3, 0x95, 0xb1, 0x67, 0xfe, 0xb4, 0xcf,
	0x7f, 0x07, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x7a, 0xe8, 0x84, 0x77, 0x07, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PokerServiceClient is the client API for PokerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PokerServiceClient interface {
	StartGame(ctx context.Context, in *StartGameRequest, opts ...grpc.CallOption) (*OperationResponse, error)
	AddPlayer(ctx context.Context, in *AddPlayerRequest, opts ...grpc.CallOption) (*OperationResponse, error)
	SitPlayer(ctx context.Context, in *SitPlayerRequest, opts ...grpc.CallOption) (*OperationResponse, error)
	StandPlayer(ctx context.Context, in *StandPlayerRequest, opts ...grpc.CallOption) (*OperationResponse, error)
	TakeAction(ctx context.Context, in *TakeActionRequest, opts ...grpc.CallOption) (*OperationResponse, error)
	DealHand(ctx context.Context, in *DealHandRequest, opts ...grpc.CallOption) (*OperationResponse, error)
	GetPlayerState(ctx context.Context, in *GetPlayerStateRequest, opts ...grpc.CallOption) (*PlayerState, error)
}

type pokerServiceClient struct {
	cc *grpc.ClientConn
}

func NewPokerServiceClient(cc *grpc.ClientConn) PokerServiceClient {
	return &pokerServiceClient{cc}
}

func (c *pokerServiceClient) StartGame(ctx context.Context, in *StartGameRequest, opts ...grpc.CallOption) (*OperationResponse, error) {
	out := new(OperationResponse)
	err := c.cc.Invoke(ctx, "/v1.PokerService/StartGame", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) AddPlayer(ctx context.Context, in *AddPlayerRequest, opts ...grpc.CallOption) (*OperationResponse, error) {
	out := new(OperationResponse)
	err := c.cc.Invoke(ctx, "/v1.PokerService/AddPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) SitPlayer(ctx context.Context, in *SitPlayerRequest, opts ...grpc.CallOption) (*OperationResponse, error) {
	out := new(OperationResponse)
	err := c.cc.Invoke(ctx, "/v1.PokerService/SitPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) StandPlayer(ctx context.Context, in *StandPlayerRequest, opts ...grpc.CallOption) (*OperationResponse, error) {
	out := new(OperationResponse)
	err := c.cc.Invoke(ctx, "/v1.PokerService/StandPlayer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) TakeAction(ctx context.Context, in *TakeActionRequest, opts ...grpc.CallOption) (*OperationResponse, error) {
	out := new(OperationResponse)
	err := c.cc.Invoke(ctx, "/v1.PokerService/TakeAction", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) DealHand(ctx context.Context, in *DealHandRequest, opts ...grpc.CallOption) (*OperationResponse, error) {
	out := new(OperationResponse)
	err := c.cc.Invoke(ctx, "/v1.PokerService/DealHand", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *pokerServiceClient) GetPlayerState(ctx context.Context, in *GetPlayerStateRequest, opts ...grpc.CallOption) (*PlayerState, error) {
	out := new(PlayerState)
	err := c.cc.Invoke(ctx, "/v1.PokerService/GetPlayerState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PokerServiceServer is the server API for PokerService service.
type PokerServiceServer interface {
	StartGame(context.Context, *StartGameRequest) (*OperationResponse, error)
	AddPlayer(context.Context, *AddPlayerRequest) (*OperationResponse, error)
	SitPlayer(context.Context, *SitPlayerRequest) (*OperationResponse, error)
	StandPlayer(context.Context, *StandPlayerRequest) (*OperationResponse, error)
	TakeAction(context.Context, *TakeActionRequest) (*OperationResponse, error)
	DealHand(context.Context, *DealHandRequest) (*OperationResponse, error)
	GetPlayerState(context.Context, *GetPlayerStateRequest) (*PlayerState, error)
}

// UnimplementedPokerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedPokerServiceServer struct {
}

func (*UnimplementedPokerServiceServer) StartGame(ctx context.Context, req *StartGameRequest) (*OperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartGame not implemented")
}
func (*UnimplementedPokerServiceServer) AddPlayer(ctx context.Context, req *AddPlayerRequest) (*OperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPlayer not implemented")
}
func (*UnimplementedPokerServiceServer) SitPlayer(ctx context.Context, req *SitPlayerRequest) (*OperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SitPlayer not implemented")
}
func (*UnimplementedPokerServiceServer) StandPlayer(ctx context.Context, req *StandPlayerRequest) (*OperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StandPlayer not implemented")
}
func (*UnimplementedPokerServiceServer) TakeAction(ctx context.Context, req *TakeActionRequest) (*OperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TakeAction not implemented")
}
func (*UnimplementedPokerServiceServer) DealHand(ctx context.Context, req *DealHandRequest) (*OperationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DealHand not implemented")
}
func (*UnimplementedPokerServiceServer) GetPlayerState(ctx context.Context, req *GetPlayerStateRequest) (*PlayerState, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPlayerState not implemented")
}

func RegisterPokerServiceServer(s *grpc.Server, srv PokerServiceServer) {
	s.RegisterService(&_PokerService_serviceDesc, srv)
}

func _PokerService_StartGame_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartGameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).StartGame(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PokerService/StartGame",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).StartGame(ctx, req.(*StartGameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_AddPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).AddPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PokerService/AddPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).AddPlayer(ctx, req.(*AddPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_SitPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SitPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).SitPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PokerService/SitPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).SitPlayer(ctx, req.(*SitPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_StandPlayer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StandPlayerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).StandPlayer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PokerService/StandPlayer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).StandPlayer(ctx, req.(*StandPlayerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_TakeAction_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakeActionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).TakeAction(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PokerService/TakeAction",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).TakeAction(ctx, req.(*TakeActionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_DealHand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DealHandRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).DealHand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PokerService/DealHand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).DealHand(ctx, req.(*DealHandRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PokerService_GetPlayerState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPlayerStateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PokerServiceServer).GetPlayerState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PokerService/GetPlayerState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PokerServiceServer).GetPlayerState(ctx, req.(*GetPlayerStateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PokerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.PokerService",
	HandlerType: (*PokerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartGame",
			Handler:    _PokerService_StartGame_Handler,
		},
		{
			MethodName: "AddPlayer",
			Handler:    _PokerService_AddPlayer_Handler,
		},
		{
			MethodName: "SitPlayer",
			Handler:    _PokerService_SitPlayer_Handler,
		},
		{
			MethodName: "StandPlayer",
			Handler:    _PokerService_StandPlayer_Handler,
		},
		{
			MethodName: "TakeAction",
			Handler:    _PokerService_TakeAction_Handler,
		},
		{
			MethodName: "DealHand",
			Handler:    _PokerService_DealHand_Handler,
		},
		{
			MethodName: "GetPlayerState",
			Handler:    _PokerService_GetPlayerState_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "apis.proto",
}
