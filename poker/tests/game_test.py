from ..engine.state import Action
from ..engine.game import Game
from ..engine.player import Player


class TestGame:

    def test_game_basic(self, snapshot):
        game = Game(1, 2)
        game.set_test_mode(True)
        simon = Player("Simon")
        simon.set_stack(100)
        game.sit_player(simon, 0)
        hersh = Player("Hersh")
        hersh.set_stack(100)
        game.sit_player(hersh, 1)
        chien = Player("Chien")
        chien.set_stack(100)
        game.sit_player(chien, 2)
        jarry = Player("Jarry")
        jarry.set_stack(100)
        game.sit_player(jarry, 3)
        grace = Player("Grace")
        grace.set_stack(100)
        game.sit_player(grace, 6)
        jason = Player("Jason")
        jason.set_stack(100)
        game.sit_player(jason, 7)
        snapshot.assert_match(str(game.__dict__))
        # snapshot.assert_match([str(player) if player else "None" for player in game.seats])

        game.deal_hand()
        snapshot.assert_match(str(game.game_state.__dict__))
        game.take_action(chien, Action(Action.Actions.bet, 5))
        game.take_action(jarry, Action(Action.Actions.call))
        game.take_action(grace, Action(Action.Actions.fold))
        snapshot.assert_match(str(game.get_player_state(grace).__dict__))
        game.take_action(jason, Action(Action.Actions.call))
        game.take_action(simon, Action(Action.Actions.call))
        game.take_action(hersh, Action(Action.Actions.fold))
        snapshot.assert_match(str(game.game_state.__dict__))
        snapshot.assert_match(str(game.get_player_state(simon).__dict__))
        game.take_action(simon, Action(Action.Actions.check))
        game.take_action(chien, Action(Action.Actions.check))
        game.take_action(jarry, Action(Action.Actions.bet, 10))
        game.take_action(jason, Action(Action.Actions.fold))
        snapshot.assert_match(str(game.get_player_state(jason).__dict__))
        game.take_action(simon, Action(Action.Actions.call))
        game.take_action(chien, Action(Action.Actions.call))
        snapshot.assert_match(str(game.game_state.__dict__))
        game.take_action(simon, Action(Action.Actions.check))
        game.take_action(chien, Action(Action.Actions.check))
        game.take_action(jarry, Action(Action.Actions.check))
        snapshot.assert_match(str(game.game_state.__dict__))
        snapshot.assert_match(str(game.get_player_state(jarry).__dict__))
        game.take_action(simon, Action(Action.Actions.bet, 10))
        game.take_action(chien, Action(Action.Actions.fold))
        game.take_action(jarry, Action(Action.Actions.call))
        snapshot.assert_match(str(game.game_state.__dict__))
        game.deal_hand()
        snapshot.assert_match(str(game.game_state.__dict__))
